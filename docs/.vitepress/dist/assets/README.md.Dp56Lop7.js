import{_ as a,c as i,o as n,af as e}from"./chunks/framework.Ds3YjYpd.js";const k=JSON.parse('{"title":"AnyCore 文档","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),l={name:"README.md"};function p(t,s,h,r,d,c){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="anycore-文档" tabindex="-1">AnyCore 文档 <a class="header-anchor" href="#anycore-文档" aria-label="Permalink to “AnyCore 文档”">​</a></h1><p>欢迎使用AnyCore框架文档。本文档将帮助您了解AnyCore框架的核心概念、API和使用方法。</p><h2 id="本地预览文档" tabindex="-1">本地预览文档 <a class="header-anchor" href="#本地预览文档" aria-label="Permalink to “本地预览文档”">​</a></h2><p>要在本地预览文档，请按照以下步骤操作：</p><ol><li><p>确保您已安装Node.js和pnpm</p></li><li><p>安装项目依赖：</p></li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在项目根目录执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><ol start="3"><li>启动开发服务器：</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在项目根目录执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span></code></pre></div><ol start="4"><li>打开浏览器访问 <a href="http://localhost:5173/" target="_blank" rel="noreferrer">http://localhost:5173/</a> 查看文档</li></ol><h2 id="构建文档" tabindex="-1">构建文档 <a class="header-anchor" href="#构建文档" aria-label="Permalink to “构建文档”">​</a></h2><p>要构建文档以便部署，请执行以下命令：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在项目根目录执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span></code></pre></div><p>构建后的文档将位于 <code>docs/.vitepress/dist</code> 目录中。</p><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to “项目结构”">​</a></h2><p>文档项目的主要结构如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>├── .vitepress/          # VitePress配置目录</span></span>
<span class="line"><span>│   ├── config.ts        # 站点配置文件</span></span>
<span class="line"><span>│   └── cache/           # 缓存目录</span></span>
<span class="line"><span>├── guide/               # 指南文档</span></span>
<span class="line"><span>│   └── getting-started.md # 快速开始指南</span></span>
<span class="line"><span>├── api/                 # API文档</span></span>
<span class="line"><span>│   ├── index.md         # API概览</span></span>
<span class="line"><span>│   ├── decorators.md    # 装饰器API</span></span>
<span class="line"><span>│   ├── helpers.md       # 辅助函数API</span></span>
<span class="line"><span>│   └── models.md        # 模型API</span></span>
<span class="line"><span>├── examples/            # 使用示例</span></span>
<span class="line"><span>│   └── basic-usage.md   # 基础使用示例</span></span>
<span class="line"><span>├── index.md             # 首页</span></span>
<span class="line"><span>└── README.md            # 文档说明</span></span></code></pre></div><h2 id="贡献指南" tabindex="-1">贡献指南 <a class="header-anchor" href="#贡献指南" aria-label="Permalink to “贡献指南”">​</a></h2><p>如果您发现文档中的错误或有改进建议，请提交issue或PR。我们欢迎社区贡献来完善文档。</p><h2 id="联系我们" tabindex="-1">联系我们 <a class="header-anchor" href="#联系我们" aria-label="Permalink to “联系我们”">​</a></h2><p>如有任何问题或建议，请随时联系我们。</p>`,20)]))}const g=a(l,[["render",p]]);export{k as __pageData,g as default};
