import{_ as s,c as a,o as e,af as l}from"./chunks/framework.Ds3YjYpd.js";const g=JSON.parse('{"title":"API 文档","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md"}'),t={name:"api/index.md"};function h(n,i,r,k,p,d){return e(),a("div",null,i[0]||(i[0]=[l(`<h1 id="api-文档" tabindex="-1">API 文档 <a class="header-anchor" href="#api-文档" aria-label="Permalink to “API 文档”">​</a></h1><p>AnyCore提供了丰富的API，用于快速构建基于装饰器的应用程序。本章节将详细介绍各个模块的API接口。</p><h2 id="模块概览" tabindex="-1">模块概览 <a class="header-anchor" href="#模块概览" aria-label="Permalink to “模块概览”">​</a></h2><p>AnyCore主要包含以下模块：</p><ul><li><a href="#装饰器模块">装饰器模块</a></li><li><a href="#辅助函数模块">辅助函数模块</a></li><li><a href="#模型模块">模型模块</a></li><li><a href="#接口和枚举">接口和枚举</a></li></ul><h2 id="装饰器模块" tabindex="-1">装饰器模块 <a class="header-anchor" href="#装饰器模块" aria-label="Permalink to “装饰器模块”">​</a></h2><p>装饰器模块提供了一系列装饰器，用于标记和配置类和字段。</p><h3 id="customclass" tabindex="-1">CustomClass <a class="header-anchor" href="#customclass" aria-label="Permalink to “CustomClass”">​</a></h3><p>用于配置类的自定义信息。</p><p><strong>签名：</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ClassDecorator</span></span></code></pre></div><p><strong>参数：</strong></p><ul><li><code>config</code>：类配置对象，包含： <ul><li><code>name</code>：类的自定义名称</li></ul></li></ul><p><strong>相关函数：</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCustomClassConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><h3 id="customfield" tabindex="-1">CustomField <a class="header-anchor" href="#customfield" aria-label="Permalink to “CustomField”">​</a></h3><p>用于配置字段的自定义名称和字典数组。</p><p><strong>签名：</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dictionaryArray</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AnyDictionaryArrayModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AnyDictionaryModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]&gt;))</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PropertyDecorator</span></span></code></pre></div><p><strong>参数：</strong></p><ul><li><code>name</code>：字段的自定义名称</li><li><code>dictionaryArray</code>：字典数组或获取字典数组的函数</li></ul><p><strong>相关函数：</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCustomFieldName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCustomFieldDictionaryArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">field</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AnyDictionaryArrayModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AnyDictionaryModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="formfield" tabindex="-1">FormField <a class="header-anchor" href="#formfield" aria-label="Permalink to “FormField”">​</a></h3><p>用于配置字段的表单相关属性。</p><p><strong>签名：</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IFormFieldConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PropertyDecorator</span></span></code></pre></div><p><strong>参数：</strong></p><ul><li><code>config</code>：表单字段配置对象，具体配置项请参考<a href="#iformfieldconfig">IFormFieldConfig</a></li></ul><p><strong>相关函数：</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getFormFieldList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getFormFieldConfigObj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fieldList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IFormFieldConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="tablefield" tabindex="-1">TableField <a class="header-anchor" href="#tablefield" aria-label="Permalink to “TableField”">​</a></h3><p>用于配置字段的表格相关属性。</p><p><strong>签名：</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TableField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ITableFieldConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PropertyDecorator</span></span></code></pre></div><p><strong>参数：</strong></p><ul><li><code>config</code>：表格字段配置对象，具体配置项请参考<a href="#itablefieldconfig">ITableFieldConfig</a></li></ul><p><strong>相关函数：</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getTableFieldList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getTableFieldConfigObj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fieldList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ITableFieldConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="searchfield" tabindex="-1">SearchField <a class="header-anchor" href="#searchfield" aria-label="Permalink to “SearchField”">​</a></h3><p>用于配置字段的搜索相关属性。</p><h2 id="辅助函数模块" tabindex="-1">辅助函数模块 <a class="header-anchor" href="#辅助函数模块" aria-label="Permalink to “辅助函数模块”">​</a></h2><p>辅助函数模块提供了各种工具函数，用于数据处理和转换。</p><h3 id="anydecoratorhelper" tabindex="-1">AnyDecoratorHelper <a class="header-anchor" href="#anydecoratorhelper" aria-label="Permalink to “AnyDecoratorHelper”">​</a></h3><p>装饰器助手类，用于处理类装饰器、属性装饰器等。</p><p><strong>主要方法：</strong></p><ul><li><code>setClassConfig(target: any, classConfigKey: string, classConfig: any)</code>：设置类配置项</li><li><code>getClassConfig(target: any, classConfigKey: string, defaultValue?: any, isObject?: boolean)</code>：获取类配置项</li><li><code>setFieldConfig(target: any, keyOrContext: string | ClassFieldDecoratorContext, fieldConfigKey: string, fieldConfig: any)</code>：设置字段配置</li><li><code>getFieldList(target: any, fieldConfigKey: string)</code>：获取配置了指定装饰器的字段列表</li><li><code>getFieldConfigObject&lt;T&gt;(target: any, fieldConfigKey: string, fieldList?: string[])</code>：获取字段配置对象</li></ul><h3 id="anydatatransformhelper" tabindex="-1">AnyDataTransformHelper <a class="header-anchor" href="#anydatatransformhelper" aria-label="Permalink to “AnyDataTransformHelper”">​</a></h3><p>数据转换助手类，用于数据格式转换。</p><h3 id="anydatetimehelper" tabindex="-1">AnyDateTimeHelper <a class="header-anchor" href="#anydatetimehelper" aria-label="Permalink to “AnyDateTimeHelper”">​</a></h3><p>日期时间助手类，用于日期时间的格式化和处理。</p><h3 id="anydictionaryhelper" tabindex="-1">AnyDictionaryHelper <a class="header-anchor" href="#anydictionaryhelper" aria-label="Permalink to “AnyDictionaryHelper”">​</a></h3><p>字典助手类，用于字典数据的处理。</p><h3 id="anyfilehelper" tabindex="-1">AnyFileHelper <a class="header-anchor" href="#anyfilehelper" aria-label="Permalink to “AnyFileHelper”">​</a></h3><p>文件助手类，用于文件相关操作。</p><h3 id="anyvalidatorhelper" tabindex="-1">AnyValidatorHelper <a class="header-anchor" href="#anyvalidatorhelper" aria-label="Permalink to “AnyValidatorHelper”">​</a></h3><p>验证助手类，用于数据验证。</p><h2 id="模型模块" tabindex="-1">模型模块 <a class="header-anchor" href="#模型模块" aria-label="Permalink to “模型模块”">​</a></h2><p>模型模块提供了基础模型类，包含通用操作方法。</p><h3 id="anybasemodel" tabindex="-1">AnyBaseModel <a class="header-anchor" href="#anybasemodel" aria-label="Permalink to “AnyBaseModel”">​</a></h3><p>基础模型类，所有实体类的基类。</p><p><strong>主要方法：</strong></p><ul><li><code>getFormFieldLabel(field: string)</code>：获取表单字段的标签</li><li><code>getTableFieldLabel(field: string)</code>：获取表格字段的标签</li><li><code>getFormFieldConfigObj()</code>：获取表单字段配置对象</li><li><code>getTableFieldConfigObj()</code>：获取表格字段配置对象</li></ul><h2 id="接口和枚举" tabindex="-1">接口和枚举 <a class="header-anchor" href="#接口和枚举" aria-label="Permalink to “接口和枚举”">​</a></h2><h3 id="主要接口" tabindex="-1">主要接口 <a class="header-anchor" href="#主要接口" aria-label="Permalink to “主要接口”">​</a></h3><h4 id="iformfieldconfig" tabindex="-1">IFormFieldConfig <a class="header-anchor" href="#iformfieldconfig" aria-label="Permalink to “IFormFieldConfig”">​</a></h4><p>表单字段配置接口。</p><p><strong>属性：</strong></p><ul><li><code>formType</code>：表单控件类型</li><li><code>label</code>：字段标签</li><li><code>placeholder</code>：占位符</li><li><code>rules</code>：验证规则</li><li><code>disabled</code>：是否禁用</li><li><code>required</code>：是否必填</li><li><code>options</code>：选项数据</li></ul><h4 id="itablefieldconfig" tabindex="-1">ITableFieldConfig <a class="header-anchor" href="#itablefieldconfig" aria-label="Permalink to “ITableFieldConfig”">​</a></h4><p>表格字段配置接口。</p><p><strong>属性：</strong></p><ul><li><code>label</code>：字段标签</li><li><code>width</code>：列宽</li><li><code>ellipsis</code>：是否省略显示</li><li><code>sorter</code>：是否可排序</li><li><code>fixed</code>：固定方式</li><li><code>align</code>：对齐方式</li><li><code>customRender</code>：自定义渲染函数</li><li><code>dateFormat</code>：日期格式</li><li><code>isAlways</code>：是否常驻在表格中</li></ul><h3 id="主要枚举" tabindex="-1">主要枚举 <a class="header-anchor" href="#主要枚举" aria-label="Permalink to “主要枚举”">​</a></h3><h4 id="eformitemtype" tabindex="-1">EFormItemType <a class="header-anchor" href="#eformitemtype" aria-label="Permalink to “EFormItemType”">​</a></h4><p>表单控件类型枚举。</p><p><strong>值：</strong></p><ul><li><code>INPUT</code>：输入框</li><li><code>SELECT</code>：选择器</li><li><code>DATE_PICKER</code>：日期选择器</li><li><code>CHECKBOX</code>：复选框</li><li><code>RADIO</code>：单选框</li><li><code>SWITCH</code>：开关</li><li><code>TEXTAREA</code>：文本域</li></ul><h4 id="edateformattype" tabindex="-1">EDateFormatType <a class="header-anchor" href="#edateformattype" aria-label="Permalink to “EDateFormatType”">​</a></h4><p>日期格式枚举。</p><h2 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to “类型定义”">​</a></h2><p>AnyCore提供了丰富的类型定义，用于TypeScript项目的类型检查。详细信息请参考源码中的types目录。</p>`,82)]))}const c=s(t,[["render",h]]);export{g as __pageData,c as default};
